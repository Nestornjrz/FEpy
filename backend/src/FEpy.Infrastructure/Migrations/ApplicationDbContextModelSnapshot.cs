// <auto-generated />
using System;
using FEpy.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FEpy.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FEpy.Domain.Entities.Depositos.Deposito", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DireccionDeposito")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreDeposito")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<Guid?>("SupervisorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("NombreDeposito")
                        .IsUnique()
                        .HasFilter("[NombreDeposito] IS NOT NULL");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Depositos", (string)null);
                });

            modelBuilder.Entity("FEpy.Domain.Entities.DepositosInspectores.DepositoInspector", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepositoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InspectorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InspectorId");

                    b.HasIndex("DepositoId", "InspectorId")
                        .IsUnique();

                    b.ToTable("DepositosInspectores", (string)null);
                });

            modelBuilder.Entity("FEpy.Domain.Entities.DepositosMercaderias.DepositoMercaderia", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepositoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MercaderiaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MercaderiaId");

                    b.HasIndex("DepositoId", "MercaderiaId")
                        .IsUnique();

                    b.ToTable("DepositosMercaderias", (string)null);
                });

            modelBuilder.Entity("FEpy.Domain.Entities.DepositosSociosDeNegocios.DepositoSocioDeNegocio", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepositoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SocioDeNegocioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SocioDeNegocioId");

                    b.HasIndex("DepositoId", "SocioDeNegocioId")
                        .IsUnique();

                    b.ToTable("DepositosSociosDeNegocios", (string)null);
                });

            modelBuilder.Entity("FEpy.Domain.Entities.Inspectores.Inspector", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumeroDeCedula")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("NumeroDeCedula")
                        .IsUnique()
                        .HasFilter("[NumeroDeCedula] IS NOT NULL");

                    b.ToTable("Inspectores", (string)null);
                });

            modelBuilder.Entity("FEpy.Domain.Entities.Mercaderias.Mercaderia", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NombreMercaderia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("NombreMercaderia")
                        .IsUnique()
                        .HasFilter("[NombreMercaderia] IS NOT NULL");

                    b.ToTable("Mercaderias", (string)null);
                });

            modelBuilder.Entity("FEpy.Domain.Entities.Movimientos.Movimiento", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<Guid>("DepositoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MercaderiaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SocioDeNegocioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoDeMovimientoId")
                        .HasColumnType("int");

                    b.Property<string>("UnidadDeMedida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DepositoId");

                    b.HasIndex("MercaderiaId");

                    b.HasIndex("SocioDeNegocioId");

                    b.HasIndex("TipoDeMovimientoId");

                    b.ToTable("Movimiento");
                });

            modelBuilder.Entity("FEpy.Domain.Entities.Personas.Persona", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Personas", (string)null);
                });

            modelBuilder.Entity("FEpy.Domain.Entities.SociosDeNegocios.SocioDeNegocio", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ruc")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("Ruc")
                        .IsUnique()
                        .HasFilter("[Ruc] IS NOT NULL");

                    b.ToTable("SociosDeNegocios", (string)null);
                });

            modelBuilder.Entity("FEpy.Domain.Entities.Supervisores.Supervisor", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumeroDeCedula")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("NumeroDeCedula")
                        .IsUnique()
                        .HasFilter("[NumeroDeCedula] IS NOT NULL");

                    b.ToTable("Supervisores", (string)null);
                });

            modelBuilder.Entity("FEpy.Domain.Entities.TiposDeMovimientos.TipoDeMovimiento", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("NombreTipoMovimiento")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("NombreTipoMovimiento")
                        .IsUnique()
                        .HasFilter("[NombreTipoMovimiento] IS NOT NULL");

                    b.ToTable("TiposDeMovimientos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NombreTipoMovimiento = "Entrada"
                        },
                        new
                        {
                            Id = 2,
                            NombreTipoMovimiento = "Salida"
                        },
                        new
                        {
                            Id = 3,
                            NombreTipoMovimiento = "SinMovimiento"
                        },
                        new
                        {
                            Id = 4,
                            NombreTipoMovimiento = "Ajuste"
                        });
                });

            modelBuilder.Entity("FEpy.Infrastructure.Outbox.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OcurredOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProcessedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OutboxMessages", (string)null);
                });

            modelBuilder.Entity("FEpy.Domain.Entities.Depositos.Deposito", b =>
                {
                    b.HasOne("FEpy.Domain.Entities.Supervisores.Supervisor", "Supervisor")
                        .WithMany("Depositos")
                        .HasForeignKey("SupervisorId");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("FEpy.Domain.Entities.DepositosInspectores.DepositoInspector", b =>
                {
                    b.HasOne("FEpy.Domain.Entities.Depositos.Deposito", "Deposito")
                        .WithMany("Inspectores")
                        .HasForeignKey("DepositoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FEpy.Domain.Entities.Inspectores.Inspector", "Inspector")
                        .WithMany("Depositos")
                        .HasForeignKey("InspectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deposito");

                    b.Navigation("Inspector");
                });

            modelBuilder.Entity("FEpy.Domain.Entities.DepositosMercaderias.DepositoMercaderia", b =>
                {
                    b.HasOne("FEpy.Domain.Entities.Depositos.Deposito", "Deposito")
                        .WithMany("Mercaderias")
                        .HasForeignKey("DepositoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FEpy.Domain.Entities.Mercaderias.Mercaderia", "Mercaderia")
                        .WithMany("Depositos")
                        .HasForeignKey("MercaderiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deposito");

                    b.Navigation("Mercaderia");
                });

            modelBuilder.Entity("FEpy.Domain.Entities.DepositosSociosDeNegocios.DepositoSocioDeNegocio", b =>
                {
                    b.HasOne("FEpy.Domain.Entities.Depositos.Deposito", "Deposito")
                        .WithMany("SociosDeNegocios")
                        .HasForeignKey("DepositoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FEpy.Domain.Entities.SociosDeNegocios.SocioDeNegocio", "SocioDeNegocio")
                        .WithMany("Depositos")
                        .HasForeignKey("SocioDeNegocioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deposito");

                    b.Navigation("SocioDeNegocio");
                });

            modelBuilder.Entity("FEpy.Domain.Entities.Inspectores.Inspector", b =>
                {
                    b.HasOne("FEpy.Domain.Entities.Personas.Persona", "Persona")
                        .WithOne()
                        .HasForeignKey("FEpy.Domain.Entities.Inspectores.Inspector", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("FEpy.Domain.Entities.Movimientos.Movimiento", b =>
                {
                    b.HasOne("FEpy.Domain.Entities.Depositos.Deposito", "Deposito")
                        .WithMany()
                        .HasForeignKey("DepositoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FEpy.Domain.Entities.Mercaderias.Mercaderia", "Mercaderia")
                        .WithMany()
                        .HasForeignKey("MercaderiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FEpy.Domain.Entities.SociosDeNegocios.SocioDeNegocio", "SocioDeNegocio")
                        .WithMany()
                        .HasForeignKey("SocioDeNegocioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FEpy.Domain.Entities.TiposDeMovimientos.TipoDeMovimiento", "TipoDeMovimiento")
                        .WithMany()
                        .HasForeignKey("TipoDeMovimientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deposito");

                    b.Navigation("Mercaderia");

                    b.Navigation("SocioDeNegocio");

                    b.Navigation("TipoDeMovimiento");
                });

            modelBuilder.Entity("FEpy.Domain.Entities.SociosDeNegocios.SocioDeNegocio", b =>
                {
                    b.HasOne("FEpy.Domain.Entities.Personas.Persona", "Persona")
                        .WithOne()
                        .HasForeignKey("FEpy.Domain.Entities.SociosDeNegocios.SocioDeNegocio", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("FEpy.Domain.Entities.Supervisores.Supervisor", b =>
                {
                    b.HasOne("FEpy.Domain.Entities.Personas.Persona", "Persona")
                        .WithOne()
                        .HasForeignKey("FEpy.Domain.Entities.Supervisores.Supervisor", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("FEpy.Domain.Entities.Depositos.Deposito", b =>
                {
                    b.Navigation("Inspectores");

                    b.Navigation("Mercaderias");

                    b.Navigation("SociosDeNegocios");
                });

            modelBuilder.Entity("FEpy.Domain.Entities.Inspectores.Inspector", b =>
                {
                    b.Navigation("Depositos");
                });

            modelBuilder.Entity("FEpy.Domain.Entities.Mercaderias.Mercaderia", b =>
                {
                    b.Navigation("Depositos");
                });

            modelBuilder.Entity("FEpy.Domain.Entities.SociosDeNegocios.SocioDeNegocio", b =>
                {
                    b.Navigation("Depositos");
                });

            modelBuilder.Entity("FEpy.Domain.Entities.Supervisores.Supervisor", b =>
                {
                    b.Navigation("Depositos");
                });
#pragma warning restore 612, 618
        }
    }
}
